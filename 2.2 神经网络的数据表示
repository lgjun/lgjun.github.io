数据存储再多为Numpy数组中，叫做张量. 当前所有机器学习系统都使用张量作为基本数据结构。张量的维度（dimension）通常叫做轴.

2.2.1 标量（0D张量）
仅包含一个数字的张量叫做标量（scalar, 标量张量、零维张量、0D张量）。
标量张量有 0 个轴（ndim == 0）, 张量轴的个数也叫做阶（rank）
In [1]: import numpy as np

In [2]: x = np.array(12)

In [3]: x
Out[3]: array(12)

In [4]: x.ndim
Out[4]: 0

2.2.2 向量（1D张量）
数字组成的数组叫做向量（vector）或 1 维张量（1D张量）. 一维张量只有一个轴.
In [6]: x = np.array([12,3,4,2,23,34])

In [7]: x.ndim
Out[7]: 1

In [8]: x
Out[8]: array([12,  3,  4,  2, 23, 34])
这个向量有5个元素，所以被称为 5D 向量

2.2.3 矩阵（2D张量）
向量组成的数组叫做矩阵（matrix）或二维张量（2D张量）. 矩阵有两个轴（通常叫做行和列）
In [10]: x = np.array([[12,2,3,4],[43,4,5,2],[0,3,23,21]])

In [11]: x.ndim
Out[11]: 2

2.2.4 3D张量与更高维张量
将多个矩阵组合成一个新的数组，就可得到一个3D张量
In [15]: x = np.array([[[12,2,3,4],[43,4,5,2],[0,3,23,21]],[[12,2,3,4],[43,4,5,2],[0,3,23,21]],[[12,2,3,4],[43,4,5,2],[0,3,23,21]],[[12,2,3,4],[43,4,5,2],[0,3,23,21]]])

In [16]: x.ndim
Out[16]: 3

将多个 3D 张量组合成一个数组，可以创建一个4D张量

2.2.5 关键属性
张量是由以下三个关键属性来定义的：
1）轴的个数（阶）
2）形状，这是一个整数元组，表示张量沿每个轴的维度大小，上面矩阵的形状为（3，4），3D张量示例的形状为（4，3，4）
3）数据类型（在python库中通常叫dtype）
2.2.6 在Numpy 中操作张量
选择张量的特定元素叫做张量切片（tensor slicing）
In [6]: my_slice = train_images[10:100]

In [7]: my_slice.ndim
Out[7]: 3

In [8]: my_slice.shape
Out[8]: (90, 28, 28)

In [9]: my_slice = train_images[10:100,:,:]

In [10]: my_slice.shape
Out[10]: (90, 28, 28)

In [11]: my_slice = train_images[10:100,0:28,0:28]

In [12]: my_slice.shape
Out[12]: (90, 28, 28)

2.2.7 数据批量
通常来说深度学习中所有数据张量的第一个轴（0轴）都是样本轴（sample axis，有时也叫样本维度）。
深度学习模型不会同时处理整个数据集，而是将数据拆分成小批量。

对于批量张量，第一个轴（0轴）叫做批量轴（batch axis）或批量维度（batch dimension）。

2.2.8 现实世界中的数据张量

向量数据：2D张量，形状为（samples, features）
时间序列或序列数据：3D张量，形状为（samples, timesteps, features）
图像：4D张量，形状为（samples, height, width, channels）或（samples, channels, height, width）
视频：5D张量，形状为（samples,frames,height,width,channels）或（samples,frames,channels,height,width）

图像张量的形状有两种约定：通道在后（channels-last）的约定（在tensorflow中使用）和通道在前（channels-first）(在Theano中使用)。
Google的Tensorflow机器学习框架将颜色深度轴放在最后：（samples,height,width,color_depth）;Theano将图像深度轴放在批量轴之后：（samples,color_depth,height,width）
